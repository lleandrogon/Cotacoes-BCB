{"timestamp":"2025-10-25T22:21:35.687237Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-25T22:21:35.687771Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/cotacoes.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-25T22:21:35.731037Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-25T22:21:35.731211Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-25T22:21:35.731310Z","level":"info","event":"Current task name:transform","logger":"task.stdout"}
{"timestamp":"2025-10-25T22:21:35.731343Z","level":"info","event":"Dag name:fin_cotacoes_bcb_classic","logger":"task.stdout"}
{"timestamp":"2025-10-25T22:21:35.745683Z","level":"info","event":"Done. Returned value was: Empty DataFrame\nColumns: [DT_FECHAMENTO, COD_MOEDA, TIPO_MOEDA, DESC_MOEDA, TAXA_COMPRA, TAXA_VENDA, PARIDADE_COMPRA, PARIDADE_VENDA, data_processamento]\nIndex: []","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-25T22:21:35.745976Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019a1d76-73c4-791a-9c8f-5593f2f9de23'), task_id='transform', dag_id='fin_cotacoes_bcb_classic', run_id='manual__2025-10-25T22:21:33.490878+00:00', try_number=1, dag_version_id=UUID('019a1d6a-48d8-729f-8629-82167dd9a1d3'), map_index=-1, hostname='308a76ccdffb', context_carrier={}, task=<Task(PythonOperator): transform>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 10, 25, 22, 21, 35, 254890, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-25T22:21:35.782841Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-25T22:21:35.783017Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-25T22:21:35.783099Z","level":"info","event":"Task operator:<Task(PythonOperator): transform>","logger":"task.stdout"}
