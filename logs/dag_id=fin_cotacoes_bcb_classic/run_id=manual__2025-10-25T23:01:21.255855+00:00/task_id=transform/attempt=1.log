{"timestamp":"2025-10-25T23:01:23.810607Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-25T23:01:23.811339Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/cotacoes.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-25T23:01:23.853338Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-25T23:01:23.853528Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-25T23:01:23.853621Z","level":"info","event":"Current task name:transform","logger":"task.stdout"}
{"timestamp":"2025-10-25T23:01:23.853652Z","level":"info","event":"Dag name:fin_cotacoes_bcb_classic","logger":"task.stdout"}
{"timestamp":"2025-10-25T23:01:23.874000Z","level":"info","event":"Done. Returned value was: DT_FECHAMENTO,COD_MOEDA,TIPO_MOEDA,DESC_MOEDA,TAXA_COMPRA,TAXA_VENDA,PARIDADE_COMPRA,PARIDADE_VENDA,data_processamento\n","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-25T23:01:23.874302Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019a1d9a-e2f9-7539-80e5-dfdc4b96bfcb'), task_id='transform', dag_id='fin_cotacoes_bcb_classic', run_id='manual__2025-10-25T23:01:21.255855+00:00', try_number=1, dag_version_id=UUID('019a1d7b-c0ab-79eb-8004-ef29e070426a'), map_index=-1, hostname='308a76ccdffb', context_carrier={}, task=<Task(PythonOperator): transform>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 10, 25, 23, 1, 23, 417002, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-25T23:01:23.903815Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-25T23:01:23.903975Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-25T23:01:23.904063Z","level":"info","event":"Task operator:<Task(PythonOperator): transform>","logger":"task.stdout"}
